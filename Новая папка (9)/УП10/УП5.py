from collections import Counter  # Импортируем Counter для подсчета частоты элементов

def least_frequent_number(nums):
    """
    Находит наименьшее число среди наименее часто встречающихся чисел в списке.
    Если несколько чисел встречаются одинаково редко, возвращает наименьшее из них.
    """
    count = Counter(nums)  # Создаем словарь {число: количество_вхождений}
    
    # Находим минимальную частоту встречаемости среди всех чисел
    min_frequency = min(count.values())
    
    # Инициализируем ответ максимально возможным числом из списка,
    # чтобы любое число с минимальной частотой было меньше начального значения
    answer = max(nums)
    
    # Перебираем все уникальные числа в списке
    for num in count:
        # Если текущее число имеет минимальную частоту встречаемости
        if count[num] == min_frequency:
            # И если оно меньше текущего ответа - обновляем ответ
            if num < answer:
                answer = num
    
    return answer  # Возвращаем наименьшее из наименее частых чисел


# Тестовые случаи:

# 1 встречается 1 раз, 2 встречается 2 раза, 3 встречается 1 раз, 4 встречается 2 раза
# Наименее частые: 1 и 3 (по 1 разу). Наименьшее из них - 1.
print(least_frequent_number([4, 2, 4, 1, 3, 2, 1]))  # Вывод: 1

# Все числа встречаются одинаково (1 - 3 раза, 2 - 2 раза, 3 - 2 раза)
# Наименее частые: 2 и 3 (по 2 раза). Наименьшее из них - 2.
print(least_frequent_number([3, 2, 1, 1, 3, 2, 1]))  # Вывод: 2

# Только одно число в списке
print(least_frequent_number([1]))  # Вывод: 1

# Все числа одинаковые
print(least_frequent_number([1, 1, 1, 1, 1]))  # Вывод: 1

# Все числа встречаются по 1 разу, возвращаем наименьшее
print(least_frequent_number([1, 10, 100, 1000]))  # Вывод: 1

# 10 встречается 1 раз, 1 встречается 2 раза
print(least_frequent_number([1, 1, 10]))  # Вывод: 10