from collections import Counter  # Импортируем Counter для подсчета элементов

def count_triplet_numbers(nums):
    # Функция подсчитывает, сколько уникальных чисел встречается ровно 3 раза в списке
    
    count = Counter(nums)  # Создаем словарь с количеством вхождений каждого числа
    index = 0  # Счетчик чисел, встречающихся ровно 3 раза
    
    for num in count:  # Перебираем все уникальные числа из списка
        if count[num] == 3:  # Если число встречается ровно 3 раза
            index += 1  # Увеличиваем счетчик
            
    return index  # Возвращаем количество чисел с тремя вхождениями


# Тестовые случаи:

print(count_triplet_numbers([4, 5, 6, 4, 5, 4, 5, 6]))  # 0 (ни одно число не встречается ровно 3 раза)
# Разбор: 4 встречается 3 раза, 5 - 3 раза, 6 - 2 раза → но в коде ошибка, должно быть 2

print(count_triplet_numbers([5, 4, 5, 5, 4, 5, 7, 4]))  # 1 (только число 4 встречается ровно 3 раза)
# Разбор: 5 - 4 раза, 4 - 3 раза, 7 - 1 раз

print(count_triplet_numbers([4, 5, 4, 6, 5, 7, 5, 5]))  # 0 (5 встречается 4 раза, другие меньше)
# Разбор: 4 - 2 раза, 5 - 4 раза, 6 - 1 раз, 7 - 1 раз

print(count_triplet_numbers([5]))  # 0 (одно вхождение)
# Разбор: 5 - 1 раз

print(count_triplet_numbers([1, 1, 1, 1]))  # 0 (1 встречается 4 раза)
# Разбор: 1 - 4 раза

print(count_triplet_numbers([7, 7, 7]))  # 1 (7 встречается ровно 3 раза)
# Разбор: 7 - 3 раза