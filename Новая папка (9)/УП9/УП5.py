def alter_sort(nums):
    n = len(nums)

    # --- Первая фаза: Сортировка списка по возрастанию (используя сортировку выбором) ---
    for i in range(n - 1):
        index_min = i # Предполагаем, что текущий элемент - минимальный

        for j in range(i + 1, n):
            if nums[j] < nums[index_min]:
                index_min = j # Ищем фактический минимальный элемент

        # Меняем местами текущий элемент с найденным минимальным
        nums[i], nums[index_min] = nums[index_min], nums[i]

    # --- Вторая фаза: Перестройка отсортированного списка в чередующемся порядке ---
    lst = [] # Создаем новый список для хранения результата
    left, right = 0, len(nums) - 1 # Устанавливаем указатели на начало и конец отсортированного списка

    # Перемещаем элементы из отсортированного списка в 'lst' в чередующемся порядке
    while left <= right:
        # Сначала добавляем наибольший элемент (справа)
        if right >= left: # Проверяем, что 'right' еще не пересек 'left'
            lst.append(nums[right])
            right -= 1 # Сдвигаем правый указатель влево
        
        # Затем добавляем наименьший элемент (слева)
        if left <= right: # Проверяем, что 'left' еще не пересек 'right'
            lst.append(nums[left])
            left += 1 # Сдвигаем левый указатель вправо

    # --- Третья фаза: Копирование элементов из 'lst' обратно в исходный 'nums' ---
    for i in range(len(nums)):
        nums[i] = lst[i]

# Тестовые примеры:
nums = [1, 2, 3, 4, 5]
alter_sort(nums)
print(nums) # Ожидается: [5, 1, 4, 2, 3]

nums = [5, 4, 3, 2, 1]
alter_sort(nums)
print(nums) # Ожидается: [5, 1, 4, 2, 3]

nums = [1, 1, 1]
alter_sort(nums)
print(nums) # Ожидается: [1, 1, 1]

nums = [2, 3, 1, 5, 5, 3, 1]
alter_sort(nums)
print(nums) # Сортировка: [1, 1, 2, 3, 3, 5, 5]. Ожидается: [5, 1, 5, 1, 3, 2, 3] (или похожий)

nums = [-1, -5, -3, -2, -7, -4]
alter_sort(nums)
print(nums) # Сортировка: [-7, -5, -4, -3, -2, -1]. Ожидается: [-1, -7, -2, -5, -3, -4]

nums = [2]
alter_sort(nums)
print(nums) # Ожидается: [2]